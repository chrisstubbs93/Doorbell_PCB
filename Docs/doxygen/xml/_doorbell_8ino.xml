<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_doorbell_8ino" kind="file" language="C++">
    <compoundname>Doorbell.ino</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_doorbell_8ino_1a52c5394c861b62875409604eedc0fcd7" prot="public" static="no" mutable="no">
        <type>DNSServer</type>
        <definition>DNSServer dnsServer</definition>
        <argsstring></argsstring>
        <name>dnsServer</name>
        <briefdescription>
<para>DNS server used for captive portal in setup mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" line="29" column="1" bodyfile="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_doorbell_8ino_1a5c64e18eb1e6df97544212e53facd531" prot="public" static="no" mutable="no">
        <type>boolean</type>
        <definition>boolean settingMode</definition>
        <argsstring></argsstring>
        <name>settingMode</name>
        <briefdescription>
<para>Is the device in setup wizard mode (true) or normal mode (false)? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" line="31" column="1" bodyfile="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_doorbell_8ino_1acb9e18b536f640e95c60f0c3ebe17766" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int doorbells</definition>
        <argsstring></argsstring>
        <name>doorbells</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Number of VCNL4020 sensors detected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" line="32" column="1" bodyfile="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_doorbell_8ino_1afc77d1fb95870b5511dffff362261cb6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool sleeping</definition>
        <argsstring></argsstring>
        <name>sleeping</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Is the device in or about to enter deep sleep mode for power saving? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" line="33" column="1" bodyfile="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_doorbell_8ino_1acfc2fc23d5e539f2d0b9ed6091a6c24e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GxIO_Class</type>
        <definition>GxIO_Class io</definition>
        <argsstring>(SPI, 15, 4, 5)</argsstring>
        <name>io</name>
        <param>
          <type>SPI</type>
        </param>
        <param>
          <type>15</type>
        </param>
        <param>
          <type>4</type>
        </param>
        <param>
          <type>5</type>
        </param>
        <briefdescription>
<para>Define the hardware pins used by the ePaper display for SPI. 15=CS, 4=DC, 5=RST. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_doorbell_8ino_1a316a5fbb017a97dc4c8a9f1383f7b4b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GxEPD_Class</type>
        <definition>GxEPD_Class display</definition>
        <argsstring>(io, 5, 16)</argsstring>
        <name>display</name>
        <param>
          <type><ref refid="_doorbell_8ino_1acfc2fc23d5e539f2d0b9ed6091a6c24e" kindref="member">io</ref></type>
        </param>
        <param>
          <type>5</type>
        </param>
        <param>
          <type>16</type>
        </param>
        <briefdescription>
<para>Define the hardware pins used by the ePaper display for control. 5=RST, 16=BUSY.. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_doorbell_8ino_1ae4f1791fd59f61a92af54c63a79ac112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>WebServer</type>
        <definition>WebServer webServer</definition>
        <argsstring>(80)</argsstring>
        <name>webServer</name>
        <param>
          <type>80</type>
        </param>
        <briefdescription>
<para>Web server used for setup wizard and config interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_doorbell_8ino_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup function runs once on startup. Detect boot mode (normal or waking up from deep sleep). Perform setup. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" line="36" column="1" bodyfile="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" bodystart="36" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="_doorbell_8ino_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loop function runs continuously. Poll devices and run background tasks. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" line="77" column="1" bodyfile="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino" bodystart="77" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Main file for the Lecturer Availability Door Announcer final year BEng project by Chris Stubbs. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#define<sp/>VERSION<sp/>&quot;1.0&quot;//update<sp/>when<sp/>comitted<sp/>to<sp/>github</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;WiFi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DNSServer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;WiFiClient.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;WebServer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;esp_wpa2.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ArduinoJson.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Settings.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//Initial<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitmaps_8h" kindref="compound">bitmaps.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;HTTPClient.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SPIFFS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Wire.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Adafruit_VCNL4010.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GxEPD.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GxIO/GxIO.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GxIO/GxIO_SPI/GxIO_SPI.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;GxGDEH029A1/GxGDEH029A1.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>the<sp/>display<sp/>class<sp/>to<sp/>use:<sp/>2.9&quot;<sp/>b/w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Fonts/FreeMonoBold9pt7b.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Fonts/FreeMonoBold12pt7b.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">GxIO_Class<sp/><ref refid="_doorbell_8ino_1acfc2fc23d5e539f2d0b9ed6091a6c24e" kindref="member">io</ref>(SPI,<sp/><sp/>15,<sp/><sp/>4,<sp/><sp/>5);<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal">GxEPD_Class<sp/><ref refid="_doorbell_8ino_1a316a5fbb017a97dc4c8a9f1383f7b4b0" kindref="member">display</ref>(<ref refid="_doorbell_8ino_1acfc2fc23d5e539f2d0b9ed6091a6c24e" kindref="member">io</ref>,<sp/><sp/>5,<sp/><sp/>16);<sp/></highlight></codeline>
<codeline lineno="29" refid="_doorbell_8ino_1a52c5394c861b62875409604eedc0fcd7" refkind="member"><highlight class="normal">DNSServer<sp/><ref refid="_doorbell_8ino_1a52c5394c861b62875409604eedc0fcd7" kindref="member">dnsServer</ref>;<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal">WebServer<sp/><ref refid="_doorbell_8ino_1ae4f1791fd59f61a92af54c63a79ac112" kindref="member">webServer</ref>(80);<sp/></highlight></codeline>
<codeline lineno="31" refid="_doorbell_8ino_1a5c64e18eb1e6df97544212e53facd531" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="_doorbell_8ino_1a5c64e18eb1e6df97544212e53facd531" kindref="member">settingMode</ref>;<sp/></highlight></codeline>
<codeline lineno="32" refid="_doorbell_8ino_1acb9e18b536f640e95c60f0c3ebe17766" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_doorbell_8ino_1acb9e18b536f640e95c60f0c3ebe17766" kindref="member">doorbells</ref><sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="33" refid="_doorbell_8ino_1afc77d1fb95870b5511dffff362261cb6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_doorbell_8ino_1afc77d1fb95870b5511dffff362261cb6" kindref="member">sleeping</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_doorbell_8ino_1a4fc01d736fe50cf5b977f755b675f11d" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_doorbell_8ino_1a4fc01d736fe50cf5b977f755b675f11d" kindref="member">setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>Wire.begin();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>Serial.println((String)</highlight><highlight class="stringliteral">&quot;[INFO]<sp/>Lecturer<sp/>availability<sp/>door<sp/>announcer<sp/>version<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(String)VERSION);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="_hardware_8ino_1ad8516e8020f21b3133a73c8ae31728ad" kindref="member">wakeup_reason</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="_doorbell_8ino_1a316a5fbb017a97dc4c8a9f1383f7b4b0" kindref="member">display</ref>.init();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="_hardware_8ino_1ae8297bf2b99a2ad67af6f9a421ea4b16" kindref="member">initGPIO</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_hardware_8ino_1a5d34488889bea2a689fec065f2a1a063" kindref="member">bootmode</ref>()<sp/>==<sp/>6)<sp/><ref refid="_g_u_i_8ino_1a6d2ae46e53ca384472c7c54d3a75ef38" kindref="member">displayVersion</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="_config_8ino_1a71502ea2a2f3c2ba9d3caaeb1655c997" kindref="member">initFS</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>configstatus<sp/>=<sp/><ref refid="_config_8ino_1a391c03491ec82959f142de94af1ff7a2" kindref="member">loadConfig</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_hardware_8ino_1a5d34488889bea2a689fec065f2a1a063" kindref="member">bootmode</ref>()<sp/>==<sp/>3)<sp/>{<sp/></highlight><highlight class="comment">//wakeup<sp/>cause<sp/>by<sp/>timer.<sp/>Update<sp/>battery<sp/>%<sp/>on<sp/>screen<sp/>and<sp/>go<sp/>back<sp/>to<sp/>sleep.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_doorbell_8ino_1afc77d1fb95870b5511dffff362261cb6" kindref="member">sleeping</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//set<sp/>the<sp/>sleeping<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_g_u_i_8ino_1aa1bc5d27389d6a706f36fd90fb5e9fde" kindref="member">writeNames</ref>();<sp/></highlight><highlight class="comment">//show<sp/>the<sp/>sleeping<sp/>flag<sp/>on<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_hardware_8ino_1a849615dc867638f36cb84b744badf221" kindref="member">entersleep</ref>();<sp/></highlight><highlight class="comment">//go<sp/>to<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(configstatus)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Config<sp/>loaded<sp/>OK.<sp/>Try<sp/>to<sp/>connect<sp/>to<sp/>WiFi.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_web_8ino_1a144025702d7aa7708d704324ecb09eff" kindref="member">connectWiFi</ref>())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WiFi<sp/>connected<sp/>OK.<sp/>Start<sp/>config<sp/>web<sp/>server<sp/>and<sp/>continue<sp/>boot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_web_8ino_1a0d04c1af31c2cdcf510d08e8a6643fa9" kindref="member">startWebServer</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WiFi<sp/>failed<sp/>to<sp/>connect.<sp/>Start<sp/>setup<sp/>mode<sp/>and<sp/>abort<sp/>boot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_web_8ino_1a292bc11fc3dcd09074ef62051f881173" kindref="member">setupMode</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_web_8ino_1a292bc11fc3dcd09074ef62051f881173" kindref="member">setupMode</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//abort<sp/>boot<sp/>to<sp/>carry<sp/>out<sp/>initial<sp/>setup<sp/>wizard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="_hardware_8ino_1a8bd4857b6377960b5d845d5035bd0243" kindref="member">detectVCNLs</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_hardware_8ino_1a5d34488889bea2a689fec065f2a1a063" kindref="member">bootmode</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source<sp/>=<sp/><ref refid="_hardware_8ino_1aa94b41c6422176525df39bf97ab00a44" kindref="member">interruptSource</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println((String)</highlight><highlight class="stringliteral">&quot;[INFO]<sp/>Interrupt<sp/>triggered<sp/>by<sp/>sensor<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="_hardware_8ino_1aa94b41c6422176525df39bf97ab00a44" kindref="member">interruptSource</ref>());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_web_8ino_1a4b775e1d95473a982717aaa2da30e4f5" kindref="member">ring</ref>(source);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="_hardware_8ino_1ab465fde968855441f09ae803a25261a8" kindref="member">calibrateVCNLs</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="_g_u_i_8ino_1aa1bc5d27389d6a706f36fd90fb5e9fde" kindref="member">writeNames</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="_doorbell_8ino_1afe461d27b9c48d5921c00d521181f12f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_doorbell_8ino_1afe461d27b9c48d5921c00d521181f12f" kindref="member">loop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="_web_8ino_1a6f6f044bce35a405bc05f223e20f8cf7" kindref="member">wifiTasks</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="_hardware_8ino_1a1d0e244aa65596a3fe94bf5c1dec999c" kindref="member">scanVCNLs</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="_hardware_8ino_1aa55f0755520915538688d090d46dd539" kindref="member">checkButtons</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="_hardware_8ino_1ad4c5e747325f2adbdafd68b6c6489e45" kindref="member">manageSleep</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>delay(SCAN_INTERVAL);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Chris/Documents/GitHub/Doorbell/Arduino/Doorbell/Doorbell.ino"/>
  </compounddef>
</doxygen>
